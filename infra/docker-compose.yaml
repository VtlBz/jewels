version: '3.8'
services:

  database:
    image: postgres:13.0-alpine
    container_name: jewels-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10

  cache:
    image: redis:6.2-alpine
    container_name: jewels-cache
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data/
    restart: on-failure
    env_file:
      - .env

  backend-srv:
    build:
      context: ..
      dockerfile: ./infra/Dockerfile
    container_name: jewels-srv
    restart: on-failure
    volumes:
      - static_value:/jewels/static/
      - media_value:/jewels/media/
    depends_on:
      - database
      - cache
    env_file:
      - .env

  nginx:
    image: nginx:1.19.3
    container_name: jewels-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend-srv

volumes:
  static_value:
  media_value:
  pg_data:
  redis_data: